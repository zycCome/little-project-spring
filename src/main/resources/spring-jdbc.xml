<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 定义jdbcBaseDao -->
    <bean id="jdbcBaseDao" class="com.ruyuan.little.project.spring.dao.JdbcBaseDao">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 定义DataSource 不使用连接池 -->
<!--    <bean id="dataSource"-->
<!--          class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="${jdbc.driverClassName}" />-->
<!--        <property name="url" value="${jdbc.url}" />-->
<!--        <property name="username" value="${jdbc.username}" />-->
<!--        <property name="password" value="${jdbc.password}" />-->
<!--    </bean>-->

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="clone">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <!-- 通常来说，只需要修改initialSize、minIdle、maxActive -->
        <!-- 初始化时建立物理连接的个数，缺省值为0 -->
        <property name="initialSize" value="5"/>
        <!-- 最小连接池数量 -->
        <property name="minIdle" value="5"/>
        <!-- 最大连接池数量，缺省值为8 -->
        <property name="maxActive" value="20"/>
        <!-- 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
        <property name="maxWait" value="60000"/>
        <!-- 添加此处作用是为了在SQL监控页面显示sql执行语句，不配置不显示 -->
        <property name="filters" value="stat,wall,log4j" />
    </bean>

    <!-- 定义jdbcDruidBaseDao 通过构造函数注入 -->
    <bean id="jdbcDruidBaseDao" class="com.ruyuan.little.project.spring.dao.JdbcDruidBaseDao">
        <constructor-arg name="dataSource" ref="dataSource" />
    </bean>

    <!-- 定义jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 定义templateBaseDao -->
    <bean id="templateBaseDao" class="com.ruyuan.little.project.spring.dao.TemplateBaseDao">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

<!--    &lt;!&ndash;  mybatis相关配置  &ndash;&gt;-->
<!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        &lt;!&ndash; 注入连接池 &ndash;&gt;-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--        &lt;!&ndash; 定义mybatis的mapper文件扫描路径 &ndash;&gt;-->
<!--        <property name="mapperLocations" value="classpath*:mapper/*Mapper.xml"/>-->
<!--        &lt;!&ndash; 定义mybatis的中实体类的路径 &ndash;&gt;-->
<!--        <property name="typeAliasesPackage" value="com.ruyuan.little.project.spring.dto"/>-->
<!--        &lt;!&ndash; 加载mybatis配置文件 &ndash;&gt;-->
<!--        <property name="configLocation" value="classpath:mybatis-config.xml" />-->
<!--    </bean>-->

<!--    &lt;!&ndash; 获取 SqlSession 对象，并交由 spring 管理  用SqlSessionTemplate得到的SqlSession可以不用我们自己操心事务的管理，以及关闭操作&ndash;&gt;-->
<!--    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--        &lt;!&ndash; 给 SqlSessionTemplate 的构造函数赋值&ndash;&gt;-->
<!--        <constructor-arg index="0" ref="sqlSessionFactory" />-->
<!--    </bean>-->

<!--    &lt;!&ndash; 定义mapper扫描包 &ndash;&gt;-->
<!--    <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        &lt;!&ndash; name="basePackage":(起始)包名, 从这个包开始扫描&ndash;&gt;-->
<!--        <property name="basePackage" value="com.ruyuan.little.project.spring.mapper"/>-->
<!--    </bean>-->

</beans>